- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    OSPGUID: 5836  ### this value should be gotten from extra_vars
  tasks:
    - name: create ssh config for jumphost in tower
      copy:
        content: |
          Host workstation-{{ OSPGUID }}.rhpds.opentlc.com
           Hostname workstation-{{ OSPGUID }}.rhpds.opentlc.com
           IdentityFile ~/.ssh/openstack.pem
           ForwardAgent yes
           User cloud-user
           StrictHostKeyChecking no
           PasswordAuthentication no
          Host 10.10.10.*
           User cloud-user
           IdentityFile ~/.ssh/openstack.pem
           ProxyCommand ssh cloud-user@workstation-{{ OSPGUID }}.rhpds.opentlc.com -W %h:%p -vvv
           StrictHostKeyChecking no
        dest: "./ssh.cfg"
#        dest: "/var/lib/awx/.ssh/config"
        mode: 0400


- hosts: jumpbox
  gather_facts: false
  tasks:
    - name: Fetch Instance Info
      os_server_facts:
        cloud: ospcloud
        region_name: RegionOne
      register: result
    - name: Add host to
      add_host:
        name: "{{ item.public_v4 }}"
        group: "{{ item.metadata.group }}"
      with_items: "{{result.ansible_facts.openstack_servers}}"
    - name: Add host
      add_host:
        name: "{{ item.public_v4 }}"
        group: "{{ item.metadata.deployment_name }}"
      with_items: "{{result.ansible_facts.openstack_servers}}"

- name: configuration
  hosts: appdbs:apps:frontends
  gather_facts: false # remove later! speeds up testing
  become: true
  roles:
    - common

- name: configure dbserver
  hosts: appdbs
  gather_facts: false # remove later! speeds up testing
  become: true
  roles:
    - dbserver

- name: configure wasserver and webserver
  hosts: apps
  gather_facts: false # remove later! speeds up testing
  become: true
  roles:
    - wasserver
    - webserver

- name: configure frontends
  hosts: frontends
  gather_facts: false # remove later! speeds up testing
  become: true
  roles:
    - proxy

- name: smoking test 
  hosts: jumpbox
  tasks:
    - name: connection test to frontend
      uri:
        url: "http://{{ hostvars[ item ]['inventory_hostname']}}"
        return_content: yes
      with_items:
        - "{{ groups['frontends']}}"
      register: webpage

    - name: Fail if 'Ansible' string is not in the page content
      fail:
      when: "'Ansible' not in webpage.results[0].content"
